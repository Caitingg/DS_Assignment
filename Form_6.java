/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package form;

import java.awt.Dimension;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

import route.bfs;
import route.dfs;
import route.dijkstra;
import route.dmModel;
import javafx.application.Application;
import javax.swing.SwingUtilities;
import route.cityDigitalModel;
import swing.ScrollBar;
/**
 *
 * @author user
 */
public class Form_6 extends javax.swing.JPanel {

    /**
     * Creates new form Form_6
     */
    public Form_6() {
        initComponents();
        sp1.setVerticalScrollBar(new ScrollBar());
        sp2.setVerticalScrollBar(new ScrollBar());
        sp3.setVerticalScrollBar(new ScrollBar());
    }
    
    private String getExplanation() {
        // Calculate total distances
        dijkstra dij = new dijkstra();
        dij.findRoute(correctCityName((String) dep.getSelectedItem()), correctCityName((String) des.getSelectedItem()));
        int dijkstraDistance = dij.getDistance();

        bfs breath = new bfs();
        breath.findRoute(correctCityName((String) dep.getSelectedItem()), correctCityName((String) des.getSelectedItem()));
        int bfsDistance = breath.getDistance();

        dfs depth = new dfs();
        depth.findRoute(correctCityName((String) dep.getSelectedItem()), correctCityName((String) des.getSelectedItem()));
        int dfsDistance = depth.getDistance();

        // Determine shortest distance algorithms
        ArrayList<String> shortestAlgorithms = new ArrayList<>();
        int shortestDistance = Math.min(Math.min(dijkstraDistance, bfsDistance), dfsDistance);

        if (dijkstraDistance == shortestDistance) {
            shortestAlgorithms.add("Dijkstra");
        }
        if (bfsDistance == shortestDistance) {
            shortestAlgorithms.add("BFS");
        }
        if (dfsDistance == shortestDistance) {
            shortestAlgorithms.add("DFS");
        }

        // Construct explanation
        StringBuilder explanationBuilder = new StringBuilder();
        explanationBuilder.append("The ");

        if (shortestAlgorithms.size() == 1) {
            explanationBuilder.append(shortestAlgorithms.get(0)).append(" algorithm yields the shortest distance of ").append(shortestDistance).append(" km. ");
        } else {
            explanationBuilder.append("models ").append(String.join(" and ", shortestAlgorithms)).append(" yield the shortest distance of ").append(shortestDistance).append(" km. ");
        }

        // Explain why the chosen travel plans are the best
        explanationBuilder.append("Model are chosen because:\n");

        if (shortestAlgorithms.contains("Dijkstra")) {
            explanationBuilder.append("- ").append("It ensure the shortest overall distance, ensuring the most efficient route for the journey.\n");
        }
        if (shortestAlgorithms.contains("BFS")) {
            explanationBuilder.append("- ").append("It explore all possible paths in a breadth-first manner, which may result in finding optimal routes, especially in scenarios with uniform edge weights.\n");
        }
        if (shortestAlgorithms.contains("DFS")) {
            explanationBuilder.append("- ").append("It explore paths deeply, which can be advantageous in scenarios with complex topologies or when the goal is to exhaustively search for solutions.\n");
        }

        return explanationBuilder.toString();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        des = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dep = new javax.swing.JComboBox<>();
        viewButton = new javax.swing.JButton();
        sp1 = new javax.swing.JScrollPane();
        dArea = new javax.swing.JTextPane();
        sp2 = new javax.swing.JScrollPane();
        bfsArea = new javax.swing.JTextPane();
        sp3 = new javax.swing.JScrollPane();
        dfsArea = new javax.swing.JTextPane();
        findButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0,80));
        jPanel1.setLayout(null);

        des.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        des.setForeground(new java.awt.Color(255, 255, 255));
        des.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "San Antonio (Spurs)", "Golden State (Warriors)", "Boston (Celtics)", "Miami (Heat)", "Los Angeles (Lakers)", "Phoenix (Suns)", "Orlando (Magic)", "Denver (Nuggets)", "Oklahoma City (Thunder)", "Houston (Rockets)" }));
        des.setBorder(null);
        des.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desActionPerformed(evt);
            }
        });
        jPanel1.add(des);
        des.setBounds(650, 400, 200, 30);

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 204, 0));
        jLabel1.setText("Destination: ");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(510, 400, 200, 30);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/map1.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel3MousePressed(evt);
            }
        });
        jPanel1.add(jLabel3);
        jLabel3.setBounds(130, -90, 780, 490);

        jLabel4.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 204, 0));
        jLabel4.setText("Departure Point: ");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(80, 400, 200, 30);

        dep.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        dep.setForeground(new java.awt.Color(255, 255, 255));
        dep.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "San Antonio (Spurs)", "Golden State (Warriors)", "Boston (Celtics)", "Miami (Heat)", "Los Angeles (Lakers)", "Phoenix (Suns)", "Orlando (Magic)", "Denver (Nuggets)", "Oklahoma City (Thunder)", "Houston (Rockets)" }));
        dep.setBorder(null);
        dep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depActionPerformed(evt);
            }
        });
        jPanel1.add(dep);
        dep.setBounds(260, 400, 200, 30);

        viewButton.setBackground(new java.awt.Color(255, 102, 0));
        viewButton.setFont(new java.awt.Font("Algerian", 0, 14)); // NOI18N
        viewButton.setForeground(new java.awt.Color(255, 255, 255));
        viewButton.setText("view");
        viewButton.setBorder(null);
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });
        jPanel1.add(viewButton);
        viewButton.setBounds(490, 440, 70, 20);

        dArea.setEditable(false);
        dArea.setBackground(new java.awt.Color(255, 255, 255));
        dArea.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        dArea.setForeground(new java.awt.Color(0, 0, 0));
        dArea.setText("Dijkstra:\n");
        sp1.setViewportView(dArea);

        jPanel1.add(sp1);
        sp1.setBounds(610, 470, 270, 160);

        bfsArea.setEditable(false);
        bfsArea.setBackground(new java.awt.Color(255, 255, 255));
        bfsArea.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        bfsArea.setForeground(new java.awt.Color(0, 0, 0));
        bfsArea.setText("Breadth-First Search:\n");
        sp2.setViewportView(bfsArea);

        jPanel1.add(sp2);
        sp2.setBounds(70, 470, 270, 160);

        dfsArea.setEditable(false);
        dfsArea.setBackground(new java.awt.Color(255, 255, 255));
        dfsArea.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        dfsArea.setForeground(new java.awt.Color(0, 0, 0));
        dfsArea.setText("Depth-First Search:\n");
        sp3.setViewportView(dfsArea);

        jPanel1.add(sp3);
        sp3.setBounds(340, 470, 270, 160);

        findButton.setBackground(new java.awt.Color(255, 102, 0));
        findButton.setFont(new java.awt.Font("Algerian", 0, 14)); // NOI18N
        findButton.setForeground(new java.awt.Color(255, 255, 255));
        findButton.setText("Find");
        findButton.setBorder(null);
        findButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findButtonActionPerformed(evt);
            }
        });
        jPanel1.add(findButton);
        findButton.setBounds(410, 440, 70, 20);

        add(jPanel1);
        jPanel1.setBounds(20, 0, 960, 650);

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        add(jPanel2);
        jPanel2.setBounds(0, 610, 1000, 40);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/background6.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        add(jLabel2);
        jLabel2.setBounds(0, -70, 1070, 760);
    }// </editor-fold>//GEN-END:initComponents

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed

        String explanation = getExplanation();
        JOptionPane.showMessageDialog(null, explanation, "Explanation", JOptionPane.INFORMATION_MESSAGE);
        
        
    }//GEN-LAST:event_viewButtonActionPerformed

    private void depActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_depActionPerformed

    private void desActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_desActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked

        SwingUtilities.invokeLater(() -> {
            Application.launch(dmModel.class);
        });
    }//GEN-LAST:event_jLabel3MouseClicked

    
    private void jLabel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MousePressed

    }//GEN-LAST:event_jLabel3MousePressed

    private void findButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findButtonActionPerformed
        // TODO add your handling code here:
           
            String depCity=correctCityName((String)dep.getSelectedItem());
            String desCity=correctCityName((String)des.getSelectedItem());
            
            bfs breath=new bfs();
            breath.findRoute(depCity, desCity);
            dfs depth=new dfs();
            depth.findRoute(depCity,desCity);
            dijkstra dij=new dijkstra();
            dij.findRoute(depCity,desCity);
            
       
//            bfsArea.setText(breath.getRoute()+"\n");
            bfsArea.setText("Breadth-First Search:\n"+breath.getRoute()+"\n"+"Distance: "+breath.getDistance()+" km");
//            dfsArea.setText(depth.getRoute()+"\n");
            dfsArea.setText("Depth-First Search:\n"+depth.getRoute()+"\n"+"Distance: "+depth.getDistance()+" km");
//            dArea.setText(dij.getRoute()+"\n");
            dArea.setText("Dijkstra: \n"+dij.getRoute()+"\n"+"Distance: "+dij.getDistance()+" km");

    }//GEN-LAST:event_findButtonActionPerformed


    public String correctCityName(String s){
        
        int index=0;
        for(int i=0;i<s.length();i++){
            if(s.charAt(i)=='('){
                index=i;
                break;
            }
        }
        return s.substring(0,(index-1));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane bfsArea;
    private javax.swing.JTextPane dArea;
    private javax.swing.JComboBox<String> dep;
    private javax.swing.JComboBox<String> des;
    private javax.swing.JTextPane dfsArea;
    private javax.swing.JButton findButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane sp1;
    private javax.swing.JScrollPane sp2;
    private javax.swing.JScrollPane sp3;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables
}
